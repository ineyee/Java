package _01进程线程多线程;
public class Main {
	public static void main(String[] args) {
		/*
		 * 一、进程
		 * 进程就是指操作系统上正在运行的应用程序，每个进程都运行在其专用且受保护的内存空间上。
		 * 在Mac上我们可以通过活动监视器来查看一个一个进程。
		 */
		
		/*
		 * 二、线程
		 * 线程就是指一段代码从头到尾的执行路径，具体地说我们编写的OC代码最终都会被编译成二进制代码供CPU执行，
		 * 那么CPU在执行这些二进制代码时是从上往下一行一行串行执行的，当遇见if语句或for语句等控制语句时，
		 * CPU会偏离当前地址处的二进制代码去执行其它地址处的二进制代码，但执行完后又会返回来执行当前地址处的二进制代码，
		 * 直到二进制代码执行完毕，这样一段代码从头到尾的执行路径就被称为一个线程。
		 */
		
		/*
		 * 三、多线程
		 * 而开辟一个新线程就是指把某段代码的执行路径和另一段代码的执行路径给完全独立开来，成为CPU的一个单独调度单位，
		 * 所以当一个进程中有多个这样独立的代码的执行路径时，就是多线程。
		 * 
		 * 使用多线程的好处是可以提高程序的执行效率，使用多线程的坏处是开辟过多的线程会占用大量内存和CPU资源，
		 * 而且还会存在数据竞争问题，因此通常开三到五个线程就差不多了。
		 * 
		 * 我们都知道一个CPU一次只能调度一个线程，那苹果是怎么实现多线程并发的呢？原来苹果会让CPU一会儿执行线程1，一会执行线程2，
		 * 当线程之间的切换时间足够短时，就让我们感觉CPU是在一次执行多个线程，而现在设备都是多核的了，就不仅仅是“感觉”了，
		 * 而是真得可以利用多个CPU来实现多线程并发。
		 * 
		 * 主线程主要用来显示/刷新UI界面和处理UI事件（如点击事件、滚动事件等），子线程主要用来做耗时操作。
		 */
		
		/*
		 * 获取当前线程：Thread[main,5,main]
		 * 线程名、线程的优先级、线程组的名
		 */
		System.out.println(Thread.currentThread()); 
	}
}
